"use strict";(self.webpackChunkmaterias=self.webpackChunkmaterias||[]).push([[3061],{7200:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"materia/seguridad-tecnologia/Evaluacion/test-4","title":"Preguntas Generadas","description":"<InteractiveQuiz","source":"@site/docs/materia/seguridad-tecnologia/Evaluacion/test-4.mdx","sourceDirName":"materia/seguridad-tecnologia/Evaluacion","slug":"/materia/seguridad-tecnologia/Evaluacion/test-4","permalink":"/RepoMaestria/docs/materia/seguridad-tecnologia/Evaluacion/test-4","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"test-4","sidebar_position":4,"title":"Preguntas Generadas"},"sidebar":"SeguridadEnProcesos","previous":{"title":"Preguntas Generadas","permalink":"/RepoMaestria/docs/materia/seguridad-tecnologia/Evaluacion/test-3"},"next":{"title":"Preguntas Generadas","permalink":"/RepoMaestria/docs/materia/seguridad-tecnologia/Evaluacion/test-5"}}');var o=s(4848),n=s(8453),r=s(8220);const t={id:"test-4",sidebar_position:4,title:"Preguntas Generadas"},c="Preguntas Generadas",d={},l=[];function u(e){const a={h1:"h1",header:"header",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.header,{children:(0,o.jsx)(a.h1,{id:"preguntas-generadas",children:"Preguntas Generadas"})}),"\n",(0,o.jsx)(r.A,{question:"\xbfQu\xe9 tipo de herramienta de revisi\xf3n autom\xe1tica de vulnerabilidades se enfoca en analizar los componentes de software, especialmente bibliotecas de terceros y c\xf3digo abierto, para detectar vulnerabilidades conocidas?",options:{A:"SAST: Static Application Security Testing",B:"Hacking \xe9tico",C:"Bug Bounties",D:"SCA: Software Composition Analysis"},correctAnswer:"D",correctExplanation:"SCA (Software Composition Analysis) es una herramienta dise\xf1ada para analizar la composici\xf3n del software, identificando componentes de c\xf3digo abierto y de terceros y detectando vulnerabilidades conocidas asociadas a ellos.",incorrectExplanation:"Las otras opciones no se centran en el an\xe1lisis de componentes de software. SAST analiza el c\xf3digo fuente en general, Hacking \xc9tico es una metodolog\xeda amplia y Bug Bounties es un programa de recompensas."}),"\n",(0,o.jsx)(r.A,{question:"A diferencia de SAST y SCA, \xbfqu\xe9 opci\xf3n de la lista se caracteriza por ser un programa que *incentiva* el reporte de vulnerabilidades por parte de investigadores de seguridad, en lugar de un proceso autom\xe1tico de revisi\xf3n?",options:{A:"SAST: Static Application Security Testing",B:"SCA: Software Composition Analysis",C:"Bug Bounties",D:"Hacking \xe9tico"},correctAnswer:"C",correctExplanation:"Bug Bounties son programas de recompensas que motivan a investigadores externos a encontrar y reportar vulnerabilidades. No son procesos autom\xe1ticos de revisi\xf3n, sino iniciativas que dependen de la actividad humana.",incorrectExplanation:"Las opciones A, B y D describen procesos o herramientas que, aunque pueden ser parte de una estrategia de seguridad, no se basan en la *incentivaci\xf3n* del reporte externo como los Bug Bounties. SAST y SCA son autom\xe1ticos, y Hacking \xc9tico es una metodolog\xeda m\xe1s amplia."}),"\n",(0,o.jsx)(r.A,{question:"\xbfCu\xe1l de los siguientes *no* es principalmente un proceso autom\xe1tico de revisi\xf3n de vulnerabilidades, sino m\xe1s bien una metodolog\xeda general que puede *incluir* herramientas autom\xe1ticas en su pr\xe1ctica?",options:{A:"SAST: Static Application Security Testing",B:"SCA: Software Composition Analysis",C:"Hacking \xe9tico",D:"An\xe1lisis de composici\xf3n de software"},correctAnswer:"C",correctExplanation:"El Hacking \xe9tico es una metodolog\xeda amplia que engloba diversas t\xe9cnicas y herramientas de seguridad, incluyendo el uso de herramientas autom\xe1ticas para la detecci\xf3n de vulnerabilidades. Sin embargo, el Hacking \xe9tico en s\xed mismo no es inherentemente un proceso *autom\xe1tico* de revisi\xf3n, sino una pr\xe1ctica que puede automatizarse en parte.",incorrectExplanation:"Las opciones A, B y D describen procesos o herramientas que son inherentemente autom\xe1ticos en su funci\xf3n principal de revisi\xf3n de vulnerabilidades. SAST y SCA son herramientas de an\xe1lisis automatizado."}),"\n",(0,o.jsx)(r.A,{question:"Si una organizaci\xf3n busca implementar procesos *autom\xe1ticos* para la revisi\xf3n de vulnerabilidades, \xbfcu\xe1les de las siguientes opciones ser\xedan las m\xe1s directamente relevantes seg\xfan la informaci\xf3n de la imagen?",options:{A:"Bug Bounties y Hacking \xe9tico",B:"Hacking \xe9tico y SCA",C:"SCA: Software Composition Analysis y SAST: Static Application Security Testing",D:"Bug Bounties y SAST"},correctAnswer:"C",correctExplanation:"SCA (Software Composition Analysis) y SAST (Static Application Security Testing) son las opciones m\xe1s relevantes si se busca implementar procesos *autom\xe1ticos* para la revisi\xf3n de vulnerabilidades, ya que ambos se basan en herramientas que automatizan el an\xe1lisis de software en busca de vulnerabilidades.",incorrectExplanation:"Las otras opciones combinan procesos autom\xe1ticos con metodolog\xedas que no son inherentemente autom\xe1ticas. Bug Bounties y Hacking \xe9tico (A, B, D) involucran elementos humanos y no son primariamente procesos autom\xe1ticos de revisi\xf3n como SCA y SAST."}),"\n",(0,o.jsx)(r.A,{question:"En metodolog\xedas de desarrollo que utilizan User Stories, \xbfcu\xe1l de las siguientes adaptaciones se considera m\xe1s efectiva para especificar los requisitos de seguridad?",options:{A:"Happy paths",B:"User 'personas'",C:"Abuse Stories",D:"Casos de uso est\xe1ndar"},correctAnswer:"C",correctExplanation:"Las 'Abuse Stories' son la adaptaci\xf3n m\xe1s efectiva para especificar seguridad en User Stories. Se enfocan en escenarios de uso malicioso y c\xf3mo un atacante podr\xeda abusar del sistema, complementando las funcionalidades positivas descritas en las User Stories tradicionales.",incorrectExplanation:"Las otras opciones no est\xe1n directamente enfocadas en la seguridad. 'Happy paths' describen el funcionamiento ideal, 'User personas' definen usuarios t\xedpicos, y 'Casos de uso est\xe1ndar' pueden no cubrir escenarios de abuso o seguridad expl\xedcitamente."}),"\n",(0,o.jsx)(r.A,{question:"\xbfQu\xe9 son las 'Abuse Stories' en el contexto de la especificaci\xf3n de seguridad y c\xf3mo se diferencian de las User Stories tradicionales?",options:{A:"Son User Stories que describen el comportamiento deseado del sistema en condiciones \xf3ptimas.",B:"Son perfiles detallados de usuarios que interact\xfaan con el sistema, incluyendo sus necesidades de seguridad.",C:"Son historias que describen c\xf3mo un atacante podr\xeda interactuar con el sistema para causar da\xf1o o comprometer la seguridad.",D:"Son diagramas de flujo que representan los posibles caminos de un usuario a trav\xe9s del sistema."},correctAnswer:"C",correctExplanation:"Las 'Abuse Stories' se centran en el punto de vista de un atacante, describiendo escenarios negativos o maliciosos. A diferencia de las User Stories tradicionales que describen funcionalidades positivas, las Abuse Stories identifican posibles abusos del sistema desde una perspectiva de seguridad.",incorrectExplanation:"Las otras opciones describen conceptos relacionados pero distintos. 'Happy paths' (A) son escenarios positivos, 'User personas' (B) son perfiles de usuario, y 'Diagramas de flujo' (D) representan procesos, ninguno de los cuales se centra en escenarios de abuso o amenazas."}),"\n",(0,o.jsx)(r.A,{question:"\xbfPor qu\xe9 los 'Happy paths' y 'User personas' pueden ser insuficientes para especificar completamente la seguridad en equipos que utilizan User Stories?",options:{A:"Porque 'Happy paths' y 'User personas' ya cubren impl\xedcitamente los aspectos de seguridad.",B:"Porque se centran en el uso leg\xedtimo y esperado del sistema, dejando de lado los escenarios de abuso y las amenazas.",C:"Porque son metodolog\xedas obsoletas que no se adaptan a las necesidades de seguridad actuales.",D:"Porque dificultan la comunicaci\xf3n entre los equipos de desarrollo y seguridad."},correctAnswer:"B",correctExplanation:"Los 'Happy paths' y 'User personas' se enfocan en el uso positivo y esperado del sistema, sin considerar expl\xedcitamente los escenarios negativos o maliciosos desde una perspectiva de seguridad. Esto deja un vac\xedo en la especificaci\xf3n de requisitos de seguridad que las 'Abuse Stories' buscan llenar.",incorrectExplanation:"Las otras opciones son incorrectas. 'Happy paths' y 'User personas' no cubren impl\xedcitamente la seguridad (A), no son metodolog\xedas obsoletas (C), y no dificultan necesariamente la comunicaci\xf3n (D), pero s\xed son limitadas en cuanto a la especificaci\xf3n de seguridad."}),"\n",(0,o.jsx)(r.A,{question:"\xbfCu\xe1l es el principal beneficio de incorporar 'Abuse Stories' en la metodolog\xeda de desarrollo con User Stories desde la perspectiva de la seguridad?",options:{A:"Acelerar el proceso de desarrollo al simplificar las User Stories.",B:"Asegurar que las funcionalidades se implementen siguiendo los 'happy paths' definidos.",C:"Identificar y abordar de forma proactiva los posibles escenarios de abuso y las amenazas a la seguridad desde las etapas iniciales del desarrollo.",D:"Mejorar la usabilidad del sistema para los usuarios leg\xedtimos."},correctAnswer:"C",correctExplanation:"El principal beneficio de las 'Abuse Stories' es que permiten integrar la seguridad desde el inicio del desarrollo, identificando y abordando proactivamente los posibles escenarios de abuso y amenazas. Esto ayuda a construir sistemas m\xe1s seguros por dise\xf1o.",incorrectExplanation:"Las otras opciones no reflejan el beneficio principal de las 'Abuse Stories' para la seguridad. No se trata de acelerar el desarrollo (A), asegurar 'happy paths' (B), o mejorar la usabilidad (D), sino de integrar la seguridad de manera proactiva."}),"\n",(0,o.jsx)(r.A,{question:"En comparaci\xf3n con las 'User Stories' tradicionales, \xbfqu\xe9 aspecto *adicional* aportan las 'Abuse Stories' al proceso de desarrollo de software en t\xe9rminos de especificaci\xf3n de seguridad?",options:{A:"Una descripci\xf3n detallada de las funcionalidades deseadas por el usuario leg\xedtimo.",B:"Una lista de los 'happy paths' que el usuario deber\xeda seguir al interactuar con el sistema.",C:"Una perspectiva centrada en el atacante y los posibles escenarios de abuso del sistema.",D:"Un conjunto de perfiles de usuario que representan a los diferentes tipos de usuarios del sistema."},correctAnswer:"C",correctExplanation:"Las 'Abuse Stories' aportan una perspectiva *adicional* centrada en el atacante. Mientras que las User Stories tradicionales se enfocan en el usuario leg\xedtimo y sus funcionalidades deseadas, las Abuse Stories consideran c\xf3mo un atacante podr\xeda abusar del sistema, complementando la especificaci\xf3n de seguridad.",incorrectExplanation:"Las otras opciones describen elementos de User Stories tradicionales o conceptos relacionados pero no el aporte *adicional* de las Abuse Stories en seguridad.  Funcionalidades deseadas (A), 'happy paths' (B) y perfiles de usuario (D) son parte de las User Stories convencionales, no del enfoque espec\xedfico de seguridad de las Abuse Stories."}),"\n",(0,o.jsx)(r.A,{question:"De las siguientes opciones, \xbfcu\xe1l representa un control *directamente* \xfatil para mitigar los efectos de un ataque de Denegaci\xf3n de Servicio (DoS) al permitir que un sistema se adapte a la demanda?",options:{A:"TLS",B:"Hash contra lista confiable",C:"Uso de recursos el\xe1sticos",D:"ACLs de red"},correctAnswer:"C",correctExplanation:"El 'Uso de recursos el\xe1sticos' es un control directamente \xfatil contra DoS, ya que permite que la infraestructura se escale din\xe1micamente para absorber picos de tr\xe1fico malicioso, manteniendo la disponibilidad del servicio para usuarios leg\xedtimos.",incorrectExplanation:"Las otras opciones, aunque son controles de seguridad, no son tan directamente efectivas contra DoS en t\xe9rminos de adaptaci\xf3n a la demanda. TLS (A) asegura la comunicaci\xf3n, Hash (B) verifica la integridad, y ACLs (D) filtran tr\xe1fico, pero no escalan recursos."}),"\n",(0,o.jsx)(r.A,{question:"\xbfC\xf3mo el 'Uso de recursos el\xe1sticos' contribuye a la mitigaci\xf3n de ataques de Denegaci\xf3n de Servicio (DoS)?",options:{A:"Cifrando las comunicaciones para evitar la interceptaci\xf3n del tr\xe1fico malicioso.",B:"Verificando la integridad de los paquetes de red para descartar tr\xe1fico corrupto.",C:"Permitiendo que el sistema aumente su capacidad de procesamiento y ancho de banda para manejar el tr\xe1fico excesivo.",D:"Filtrando el tr\xe1fico bas\xe1ndose en listas de direcciones IP conocidas como maliciosas."},correctAnswer:"C",correctExplanation:"El 'Uso de recursos el\xe1sticos' mitiga DoS al habilitar la escalabilidad de la infraestructura. Ante un ataque, el sistema puede autom\xe1ticamente asignar m\xe1s recursos (procesamiento, memoria, ancho de banda) para manejar el volumen de tr\xe1fico, evitando la saturaci\xf3n y ca\xedda del servicio.",incorrectExplanation:"Las otras opciones describen funciones de otros controles. Cifrado TLS (A) protege la confidencialidad, verificaci\xf3n de hash (B) la integridad, y filtrado por ACLs (D) el control de acceso, pero no la escalabilidad el\xe1stica."}),"\n",(0,o.jsx)(r.A,{question:"\xbfDe qu\xe9 manera las 'ACLs de red' pueden ser \xfatiles como control frente a ataques de Denegaci\xf3n de Servicio (DoS)?",options:{A:"Aumentando la capacidad de los servidores para procesar m\xe1s peticiones.",B:"Cifrando el tr\xe1fico de red para protegerlo de ataques.",C:"Filtrando y bloqueando el tr\xe1fico de red proveniente de fuentes sospechosas o maliciosas.",D:"Validando la integridad del c\xf3digo de la aplicaci\xf3n para prevenir vulnerabilidades."},correctAnswer:"C",correctExplanation:"Las 'ACLs de red' (Listas de Control de Acceso) son \xfatiles contra DoS al permitir filtrar el tr\xe1fico de red. Se pueden configurar para bloquear o limitar el tr\xe1fico proveniente de direcciones IP o rangos sospechosos, reduciendo el volumen de tr\xe1fico malicioso que llega al sistema.",incorrectExplanation:"Las otras opciones describen funciones diferentes. Aumentar capacidad (A) es elasticidad, cifrar tr\xe1fico (B) es TLS, y validar c\xf3digo (D) es SAST/SCA, ninguna de ellas describe la funci\xf3n de filtrado de las ACLs."}),"\n",(0,o.jsx)(r.A,{question:"\xbfPor qu\xe9 'TLS' NO es considerado el control *m\xe1s directo* para mitigar un ataque de Denegaci\xf3n de Servicio (DoS), aunque sea importante para la seguridad web?",options:{A:"Porque TLS no ofrece cifrado de las comunicaciones, solo autenticaci\xf3n.",B:"Porque TLS se enfoca en proteger la confidencialidad e integridad de los datos en tr\xe1nsito, no en la disponibilidad del servicio frente a una sobrecarga de peticiones.",C:"Porque TLS consume muchos recursos del servidor, empeorando los efectos de un ataque DoS.",D:"Porque TLS solo protege contra ataques de denegaci\xf3n de servicio distribuidos (DDoS)."},correctAnswer:"B",correctExplanation:"TLS (Transport Layer Security) se centra en la confidencialidad e integridad de la comunicaci\xf3n, protegiendo los datos en tr\xe1nsito mediante cifrado y autenticaci\xf3n.  Si bien es crucial para la seguridad web, no aborda directamente el problema de la disponibilidad del servicio ante un ataque DoS que busca sobrecargar el sistema.",incorrectExplanation:"Las otras opciones contienen informaci\xf3n incorrecta o no relevante. TLS s\xed ofrece cifrado (A), no empeora necesariamente los efectos de DoS (C), y no solo protege contra DDoS (D), aunque su principal limitaci\xf3n es no mitigar la sobrecarga."}),"\n",(0,o.jsx)(r.A,{question:"\xbfEn qu\xe9 escenario el control 'Hash contra lista confiable' podr\xeda ser *indirectamente* \xfatil en la mitigaci\xf3n de un ataque de Denegaci\xf3n de Servicio (DoS), aunque no sea su prop\xf3sito principal?",options:{A:"Para bloquear el tr\xe1fico de red malicioso en la capa de red.",B:"Para asegurar que solo se ejecuten aplicaciones o archivos leg\xedtimos, previniendo DoS causados por software malicioso.",C:"Para aumentar la capacidad de procesamiento del servidor ante picos de demanda.",D:"Para cifrar las comunicaciones y proteger la confidencialidad de los datos."},correctAnswer:"B",correctExplanation:"El control 'Hash contra lista confiable' verifica la integridad de archivos y aplicaciones. Indirectamente, esto puede ayudar a mitigar DoS al asegurar que solo se ejecuten software leg\xedtimo y no versiones comprometidas o maliciosas que podr\xedan ser utilizadas para lanzar o amplificar un ataque DoS.",incorrectExplanation:"Las otras opciones describen funciones de otros controles. Bloquear tr\xe1fico (A) son ACLs, aumentar capacidad (C) es elasticidad, y cifrar comunicaciones (D) es TLS.  El hash contra lista confiable se centra en la integridad del software, con un beneficio indirecto potencial en la prevenci\xf3n de DoS relacionados con software malicioso."}),"\n",(0,o.jsx)(r.A,{question:"\xbfCu\xe1l de los siguientes sistemas se encarga de enumerar vulnerabilidades de seguridad espec\xedficas asociadas a productos de software concretos?",options:{A:"CWE",B:"CVE",C:"CAPEC",D:"OWASP"},correctAnswer:"B",correctExplanation:"CVE (Common Vulnerabilities and Exposures) es el sistema que proporciona identificadores \xfanicos para vulnerabilidades de seguridad espec\xedficas que afectan a productos de software particulares. Su objetivo es catalogar vulnerabilidades conocidas para facilitar su gesti\xf3n y resoluci\xf3n.",incorrectExplanation:"Las otras opciones representan sistemas o proyectos diferentes. CWE (Common Weakness Enumeration) enumera tipos de debilidades de software, CAPEC (Common Attack Pattern Enumeration and Classification) enumera patrones de ataque, y OWASP (Open Worldwide Application Security Project) es una comunidad enfocada en seguridad web."}),"\n",(0,o.jsx)(r.A,{question:"\xbfQu\xe9 diferencia principal existe entre CVE y CWE en el contexto de la gesti\xf3n de vulnerabilidades?",options:{A:"CVE enumera categor\xedas generales de debilidades de software, mientras que CWE identifica vulnerabilidades espec\xedficas en productos.",B:"CVE se centra en patrones de ataque comunes, mientras que CWE enumera vulnerabilidades espec\xedficas.",C:"CVE enumera vulnerabilidades espec\xedficas en productos, mientras que CWE clasifica tipos de debilidades de software.",D:"CVE es un proyecto de la comunidad OWASP, mientras que CWE es un est\xe1ndar gubernamental."},correctAnswer:"C",correctExplanation:"La principal diferencia es que CVE se enfoca en enumerar instancias espec\xedficas de vulnerabilidades en productos concretos (asignando un identificador CVE \xfanico), mientras que CWE se centra en clasificar y enumerar tipos o categor\xedas generales de debilidades de software (debilidades comunes).",incorrectExplanation:"Las otras opciones invierten o confunden los roles de CVE y CWE. La opci\xf3n A es incorrecta porque invierte sus funciones, la B confunde CWE con CAPEC, y la D presenta informaci\xf3n err\xf3nea sobre la naturaleza de estos sistemas."}),"\n",(0,o.jsx)(r.A,{question:"Si se identifica una vulnerabilidad espec\xedfica en una versi\xf3n particular de un software, \xbfqu\xe9 sistema ser\xeda el m\xe1s apropiado para buscar un identificador \xfanico y detalles sobre esta vulnerabilidad?",options:{A:"CAPEC",B:"CWE",C:"CVE",D:"OWASP ZAP"},correctAnswer:"C",correctExplanation:"CVE es el sistema dise\xf1ado para asignar identificadores \xfanicos a vulnerabilidades espec\xedficas en productos de software. Por lo tanto, CVE ser\xeda el sistema m\xe1s apropiado para buscar informaci\xf3n detallada y un identificador \xfanico para una vulnerabilidad concreta en un software espec\xedfico.",incorrectExplanation:"Las otras opciones no son las m\xe1s adecuadas para buscar detalles de vulnerabilidades espec\xedficas en productos. CAPEC (A) se centra en patrones de ataque, CWE (B) en tipos de debilidades, y OWASP ZAP (D) es una herramienta de an\xe1lisis de seguridad, no un sistema de enumeraci\xf3n de vulnerabilidades."}),"\n",(0,o.jsx)(r.A,{question:"\xbfCu\xe1l de los siguientes sistemas de enumeraci\xf3n de seguridad se enfoca en clasificar y detallar 'patrones de ataque' comunes, en lugar de vulnerabilidades espec\xedficas o debilidades de software?",options:{A:"CVE",B:"CWE",C:"CAPEC",D:"CWE/CAPEC"},correctAnswer:"C",correctExplanation:"CAPEC (Common Attack Pattern Enumeration and Classification) se dedica a enumerar y clasificar patrones de ataque comunes. A diferencia de CVE que enumera vulnerabilidades espec\xedficas y CWE que enumera debilidades, CAPEC se centra en las metodolog\xedas y t\xe9cnicas utilizadas por los atacantes.",incorrectExplanation:"Las otras opciones no representan el sistema enfocado en patrones de ataque. CVE (A) enumera vulnerabilidades espec\xedficas, CWE (B) tipos de debilidades, y CWE/CAPEC (D) aunque relacionados, no es un sistema \xfanico enfocado solo en patrones de ataque."}),"\n",(0,o.jsx)(r.A,{question:"En el contexto de la seguridad de software, \xbfpara qu\xe9 tipo de an\xe1lisis o actividad ser\xeda m\xe1s \xfatil consultar la base de datos de CWE (Common Weakness Enumeration)?",options:{A:"Para obtener un identificador \xfanico para una vulnerabilidad espec\xedfica reci\xe9n descubierta en un software.",B:"Para entender las categor\xedas generales de debilidades que pueden existir en el c\xf3digo fuente y el dise\xf1o de software.",C:"Para buscar informaci\xf3n sobre patrones de ataque utilizados por ciberdelincuentes.",D:"Para realizar pruebas de penetraci\xf3n automatizadas en aplicaciones web."},correctAnswer:"B",correctExplanation:"CWE (Common Weakness Enumeration) es m\xe1s \xfatil para entender las categor\xedas generales de debilidades de software. Permite a desarrolladores y profesionales de seguridad comprender los tipos de errores comunes en el c\xf3digo y el dise\xf1o, facilitando la prevenci\xf3n y mitigaci\xf3n de vulnerabilidades.",incorrectExplanation:"Las otras opciones describen usos m\xe1s apropiados para otros sistemas o herramientas. La opci\xf3n A describe el prop\xf3sito de CVE, la C el de CAPEC, y la D describe una actividad realizada con herramientas como OWASP ZAP, no con una base de datos de debilidades como CWE."}),"\n",(0,o.jsx)(r.A,{question:"De las siguientes opciones, \xbfcu\xe1l se considera un control de seguridad que busca la 'eliminaci\xf3n' de vulnerabilidades o la reducci\xf3n de la superficie de ataque?",options:{A:"Threat Modeling",B:"OWASP Top 10",C:"Hardening",D:"An\xe1lisis de vulnerabilidades"},correctAnswer:"C",correctExplanation:"El 'Hardening' se define como un control de seguridad por eliminaci\xf3n, ya que su objetivo principal es reducir la superficie de ataque de un sistema, eliminando o desactivando servicios, funcionalidades o configuraciones innecesarias que podr\xedan ser explotadas.",incorrectExplanation:"Las otras opciones no son controles por eliminaci\xf3n. 'Threat Modeling' es un proceso de an\xe1lisis, 'OWASP Top 10' es una gu\xeda de riesgos, y 'An\xe1lisis de vulnerabilidades' es un proceso de identificaci\xf3n, pero ninguno de ellos busca directamente la eliminaci\xf3n de elementos para reducir el riesgo."}),"\n",(0,o.jsx)(r.A,{question:"\xbfEn qu\xe9 se diferencia el 'Hardening' como control de seguridad, de 'Threat Modeling' y 'OWASP Top 10' en t\xe9rminos de su objetivo principal?",options:{A:"El Hardening busca identificar vulnerabilidades, mientras que Threat Modeling busca eliminarlas y OWASP Top 10 listarlas.",B:"El Hardening busca eliminar posibles v\xedas de ataque, mientras que Threat Modeling analiza amenazas y OWASP Top 10 prioriza riesgos.",C:"El Hardening es una gu\xeda de buenas pr\xe1cticas, Threat Modeling es un proceso de an\xe1lisis y OWASP Top 10 un control por eliminaci\xf3n.",D:"El Hardening se centra en la seguridad f\xedsica, Threat Modeling en la seguridad l\xf3gica y OWASP Top 10 en la seguridad de redes."},correctAnswer:"B",correctExplanation:"La principal diferencia radica en el objetivo. 'Hardening' se enfoca en la acci\xf3n de eliminar o reducir las v\xedas de ataque, disminuyendo la superficie vulnerable. 'Threat Modeling' es un proceso de an\xe1lisis para identificar amenazas, y 'OWASP Top 10' es una lista de riesgos web, ambos orientados a la identificaci\xf3n y gesti\xf3n, no a la eliminaci\xf3n directa como el Hardening.",incorrectExplanation:"Las otras opciones presentan confusiones sobre los objetivos de cada elemento. La opci\xf3n A invierte los roles de Hardening y Threat Modeling, la C describe incorrectamente OWASP Top 10 como control por eliminaci\xf3n, y la D presenta una diferenciaci\xf3n por \xe1mbitos de seguridad que no es la principal distinci\xf3n en este contexto."}),"\n",(0,o.jsx)(r.A,{question:"\xbfCu\xe1l de las siguientes acciones ejemplifica mejor un control de seguridad por 'eliminaci\xf3n' como el 'Hardening'?",options:{A:"Implementar un sistema de detecci\xf3n de intrusiones (IDS) para alertar sobre ataques.",B:"Desactivar servicios de red innecesarios en un servidor para reducir posibles puntos de entrada para atacantes.",C:"Realizar pruebas de penetraci\xf3n para identificar vulnerabilidades en una aplicaci\xf3n web.",D:"Seguir la lista OWASP Top 10 para corregir las vulnerabilidades m\xe1s comunes en aplicaciones web."},correctAnswer:"B",correctExplanation:"Desactivar servicios de red innecesarios es un ejemplo claro de 'Hardening' y control por eliminaci\xf3n. Al eliminar funcionalidades no esenciales, se reduce la superficie de ataque y se eliminan posibles vectores de explotaci\xf3n.",incorrectExplanation:"Las otras opciones no son ejemplos de controles por eliminaci\xf3n. Implementar un IDS (A) es un control detectivo, realizar pruebas de penetraci\xf3n (C) es un an\xe1lisis, y seguir OWASP Top 10 (D) es una gu\xeda de mitigaci\xf3n, pero ninguno elimina elementos para reducir el riesgo como el Hardening."}),"\n",(0,o.jsx)(r.A,{question:"Si el 'Hardening' es un control por eliminaci\xf3n, \xbfpor qu\xe9 'Threat Modeling' y 'OWASP Top 10' no se clasifican t\xedpicamente bajo esta categor\xeda?",options:{A:"Porque Threat Modeling y OWASP Top 10 son controles preventivos, no reactivos.",B:"Porque Threat Modeling y OWASP Top 10 se centran en identificar y gestionar riesgos, no en eliminar componentes o funcionalidades.",C:"Porque Threat Modeling y OWASP Top 10 son metodolog\xedas obsoletas que no se consideran controles efectivos.",D:"Porque Threat Modeling y OWASP Top 10 son controles demasiado complejos para ser considerados 'de eliminaci\xf3n'."},correctAnswer:"B",correctExplanation:"Ni 'Threat Modeling' ni 'OWASP Top 10' son controles por eliminaci\xf3n porque su enfoque principal no es eliminar componentes o funcionalidades. 'Threat Modeling' es un proceso de an\xe1lisis para identificar amenazas, y 'OWASP Top 10' es una gu\xeda para priorizar riesgos web. Ambos buscan gestionar y mitigar riesgos, no eliminarlos mediante la supresi\xf3n de elementos.",incorrectExplanation:"Las otras opciones no explican correctamente por qu\xe9 no son controles por eliminaci\xf3n. No son preventivos en contraposici\xf3n a reactivos (A), no son obsoletas (C), ni demasiado complejos para ser de eliminaci\xf3n (D), sino que simplemente no buscan eliminar elementos como objetivo principal."}),"\n",(0,o.jsx)(r.A,{question:"En una estrategia de seguridad en capas, \xbfc\xf3mo se complementar\xeda un control por 'eliminaci\xf3n' como el 'Hardening' con otros tipos de controles como 'Threat Modeling' y gu\xedas como 'OWASP Top 10'?",options:{A:"El Hardening hace innecesarios el Threat Modeling y OWASP Top 10.",B:"El Hardening se aplica primero para eliminar vulnerabilidades, y luego Threat Modeling y OWASP Top 10 se usan para validar y guiar la seguridad restante.",C:"El Hardening se centra en la seguridad f\xedsica, mientras que Threat Modeling y OWASP Top 10 se enfocan en la seguridad l\xf3gica.",D:"El Hardening, Threat Modeling y OWASP Top 10 son estrategias competitivas, no complementarias."},correctAnswer:"B",correctExplanation:"En una estrategia de seguridad en capas, el 'Hardening' se utiliza inicialmente para reducir la superficie de ataque eliminando elementos innecesarios. Posteriormente, 'Threat Modeling' y 'OWASP Top 10' se complementan para identificar amenazas restantes, priorizar riesgos y guiar la implementaci\xf3n de controles adicionales, validando y reforzando la seguridad global.",incorrectExplanation:"Las otras opciones presentan visiones incorrectas de la complementariedad. Hardening no hace innecesarios los otros (A), no hay una separaci\xf3n por seguridad f\xedsica vs l\xf3gica (C), y no son estrategias competitivas (D), sino que se refuerzan mutuamente en una defensa en profundidad."})]})}function p(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8220:(e,a,s)=>{s.d(a,{A:()=>r});var i=s(6540),o=s(3),n=s(4848);const r=e=>{let{question:a,options:s,correctAnswer:r,correctExplanation:t,incorrectExplanation:c}=e;const[d,l]=(0,i.useState)(null),[u,p]=(0,i.useState)(!1),[m,g]=(0,i.useState)({total:0,correct:0});(0,i.useEffect)((()=>{const e={total:0,correct:0};localStorage.setItem("quizProgress",JSON.stringify(e)),g(e)}),[]);const f=e=>{u||(l(e),p(!0),(e=>{const a=localStorage.getItem("quizProgress");let s=a?JSON.parse(a):{total:0,correct:0};s.total+=1,e&&(s.correct+=1),localStorage.setItem("quizProgress",JSON.stringify(s)),g(s)})(e===r))},b=m.total>0?(m.correct/m.total*100).toFixed(0):0,A=m.total>0?((m.total-m.correct)/m.total*100).toFixed(0):0;return(0,n.jsxs)("div",{className:"quiz-card",children:[(0,n.jsx)("div",{className:"quiz-header",children:(0,n.jsx)("h3",{className:"quiz-question",children:a})}),(0,n.jsx)("div",{className:"options-list",children:Object.entries(s).map((e=>{let[a,s]=e;return(0,n.jsx)("div",{className:"option-item "+(i=a,u?i===r?"correct":i===d?"incorrect":"disabled":""),onClick:()=>f(a),children:(0,n.jsxs)("div",{className:"option-content",children:[(0,n.jsx)("span",{className:"option-letter",children:a}),(0,n.jsx)("div",{className:"option-text",children:s}),u&&(0,n.jsx)("div",{className:"status-icon",children:a===r?(0,n.jsx)(o.A3x,{className:"correct-icon"}):a===d?(0,n.jsx)(o.q_G,{className:"incorrect-icon"}):(0,n.jsx)(o.y3G,{className:"disabled-icon"})})]})},a);var i}))}),u&&(0,n.jsxs)("div",{className:"feedback-box "+(d===r?"success":"error"),children:[(0,n.jsx)("div",{className:"feedback-header",children:d===r?(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.A3x,{className:"feedback-icon success"}),(0,n.jsx)("h4",{children:"\xa1Respuesta Correcta!"})]}):(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.q_G,{className:"feedback-icon error"}),(0,n.jsx)("h4",{children:"Respuesta Incorrecta"})]})}),(0,n.jsxs)("div",{className:"feedback-content",children:[(0,n.jsxs)("p",{children:[(0,n.jsx)("strong",{children:"Tu selecci\xf3n:"})," ",s[d]]}),(0,n.jsxs)("p",{children:[(0,n.jsx)("strong",{children:"Explicaci\xf3n:"})," ",(0,n.jsx)("span",{children:d===r?t:c})]}),(0,n.jsxs)("div",{className:"correct-answer",children:[(0,n.jsx)(o.A3x,{}),(0,n.jsxs)("span",{children:["Respuesta correcta:"," ",(0,n.jsxs)("strong",{children:[r,") ",s[r]]})]})]})]}),(0,n.jsxs)("div",{className:"progress-tracker",children:[(0,n.jsxs)("p",{children:[(0,n.jsx)("strong",{children:"Progreso:"})," ",m.total," pregunta",1!==m.total&&"s"," respondida",1!==m.total&&"s"]}),(0,n.jsxs)("p",{children:[(0,n.jsx)("strong",{children:"Correctas:"})," ",b,"% -"," ",(0,n.jsx)("strong",{children:"Incorrectas:"})," ",A,"%"]})]})]})]})}}}]);